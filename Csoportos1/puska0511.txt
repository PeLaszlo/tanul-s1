CSS selektorok:
 elem head
 osztály .class
 id #id
 button:hover
 a:link
 a:visited
 
 szöveg formázás
 
		font-size: 15px;
		color: black;
        text-align: justify;
        text-decoration: dotted;
        text-transform: capitalize;
        letter-spacing: 1cm;
        text-shadow: 10px 10px rebeccapurple;
        font-family: Verdana, Geneva, Tahoma, sans-serif;
        font-weight: bolder;
        font-style: italic;
        font-family: "Jersey 15 Charted", sans-serif;
        font-weight: 400;
        font-style: normal;

túllógás
       overflow: hidden;
       overflow: scroll;
       overflow: auto;
	   
	 körbefolyás:
	 float: right; left;
	 
	 lista formázás
	 .ul {
            list-style-image: url(https://placekitten.com/50/50);
            list-style-position: inside;
            list-style: square inside url(https://placekitten.com/50/50);
        }
pszeduo elem		
		  p::first-letter{ }
        p::first-line{}
        p::before {}
        p::after
		
		th:nth-child
	   
flex doboz
			display: flex;
            flex-direction: row-reverse; írás irány
            flex-wrap: wrap-reverse;     sortörés és iránya
            flex-flow: row wrap; első kettő összevonása
            justify-content: flex-end; tartalom a sor végéhez igazítva.
			justify-content: space-around; szétdobja a tartalmat
        /* sor esetén az y tengelyt */
			align-content: end;
			align-items: center;
			
flex elemekre
		flex-grow: 1; növekedés

        flex-shrink: 1; zsugoródás
        flex-basis: 100px;
		align-self: baseline;

 CSS file beillesztése
		@import "import1.css";
		@import url("import2.css");
		
css reset

pózició állítás:
	position: relative; helyet folglal a régi helyén
	    position: absolute; szülő elemhez viszonyít.
        top: -50px;
        left: -50px;
        z-index: 2;
	  position: sticky; behatárolt területen mozog.
	  position: fixed; ott marad
 
 eszköz méretétől függő formázás 
	@media screen and (min-width: 768px) and (max-width: 1024px) {
    .item {
      background-color: red;
    }
  }
 métrékegységek:
 em rem vmin vmax vw
 
 GRID doboz
 
		.grid-container {
		display: grid;
		/* grid-template-columns: repeat(5, 1fr); */
		grid-template-columns: 1fr 1fr 1fr;
		grid-template-rows: [row-1] 300px [row-2] 200px;
		
grid terület elnevezése

    grid-template-areas: 
    "header header header"
    "footer footer footer";

    /* az új sorok méretét adhatjuk meg */
    grid-auto-rows: 100px;
    grid-auto-columns: 150px;

    /* azok az elemek amiknek "nincs helye" új sorba vagy oszlopba kerüljenek */
    grid-auto-flow: column;
    
}
.item2 {
  background-color: aliceblue;
  grid-area: header;
  /* grid-row-start: 1;
    grid-row-end: 5; */
  /* grid-column-start: 2;
    grid-column-end: 5; */

  /* grid-row: 1 / 5;
  grid-column: 3 / 5;

  grid-area: 1 / 3 / 5 / 4; */
  /*row-start / column-start / row-end / column-end */
}

.item1 {
  background-color: aliceblue;
  grid-area: footer;
  /* grid-row-start: row-1;
  grid-row-end: 3;
  grid-column-start: 1;
  grid-column-end: 6; */
  
  
  CSS változók
  :root {
    --dark-background: #5b0a0a;
}

.class {
    --number: -10;
}
var(--number);

forma kivágás
clip-path: circle(60px);
  
animáció transzformáció

/* transform: scale(2) rotateX(360deg)  rotateY(360deg)  rotateZ(360deg); */
            transform: scale(2) rotate3d(1, 1, 1, 360deg);
            filter: none;
            transition-duration: 5s;
            transition-timing-function: cubic-bezier(5, 2, 0.5, 0.3);
            transition-delay: 1s;

 
 
 HTML
   <iframe src="pages/page1.html" width="80%" height="800px"></iframe>
   <link rel="stylesheet" href="style.css">
   
   SVG rajzolás
   
   <svg width="100" height="100">
        <circle cx="50" cy="50" r="40" stroke="green" stroke-width="4" fill="yellow" />
    </svg>